{
  "_args": [
    [
      {
        "raw": "fecha@^2.3.3",
        "scope": null,
        "escapedName": "fecha",
        "name": "fecha",
        "rawSpec": "^2.3.3",
        "spec": ">=2.3.3 <3.0.0",
        "type": "range"
      },
      "D:\\inventory\\node_modules\\logform"
    ]
  ],
  "_from": "fecha@>=2.3.3 <3.0.0",
  "_id": "fecha@2.3.3",
  "_inCache": true,
  "_location": "/fecha",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/fecha_2.3.3_1519222684903_0.8600533842783573"
  },
  "_npmUser": {
    "name": "taylorhakes",
    "email": "npm@taylorhakes.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "fecha@^2.3.3",
    "scope": null,
    "escapedName": "fecha",
    "name": "fecha",
    "rawSpec": "^2.3.3",
    "spec": ">=2.3.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/logform"
  ],
  "_resolved": "https://registry.npmjs.org/fecha/-/fecha-2.3.3.tgz",
  "_shasum": "948e74157df1a32fd1b12c3a3c3cdcb6ec9d96cd",
  "_shrinkwrap": null,
  "_spec": "fecha@^2.3.3",
  "_where": "D:\\inventory\\node_modules\\logform",
  "author": {
    "name": "Taylor Hakes"
  },
  "bugs": {
    "url": "https://github.com/taylorhakes/fecha/issues"
  },
  "dependencies": {},
  "description": "Date formatting and parsing",
  "devDependencies": {
    "eslint": "^2.4.0",
    "nyc": "^5.6.0",
    "painless": "^0.9.1",
    "uglify-js": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-lUGBnIamTAwk4znq5BcqsDaxSmZ9nDVJaij6NvRt/Tg4R69gERA+otPKbS86ROw9nxVMw2/mp1fnaiWqbs6Sdg==",
    "shasum": "948e74157df1a32fd1b12c3a3c3cdcb6ec9d96cd",
    "tarball": "https://registry.npmjs.org/fecha/-/fecha-2.3.3.tgz",
    "fileCount": 7,
    "unpackedSize": 24038
  },
  "files": [
    "fecha.js",
    "fecha.min.js",
    "fecha.d.ts"
  ],
  "gitHead": "8326090529b6f633c51750d6cf07625a8ef78f5b",
  "homepage": "https://github.com/taylorhakes/fecha",
  "keywords": [
    "date",
    "parse",
    "moment",
    "format",
    "fecha",
    "formatting"
  ],
  "license": "MIT",
  "main": "fecha.js",
  "maintainers": [
    {
      "name": "taylorhakes",
      "email": "npm@taylorhakes.com"
    }
  ],
  "name": "fecha",
  "optionalDependencies": {},
  "readme": "# fecha [![Build Status](https://travis-ci.org/taylorhakes/fecha.svg?branch=master)](https://travis-ci.org/taylorhakes/fecha)\n\nLightweight date formatting and parsing (~2KB). Meant to replace parsing and formatting functionality of moment.js.\n\n### NPM\n```\nnpm install fecha --save\n```\n\n### Fecha vs Moment\n<table class=\"table table-striped table-bordered\">\n  <tbody>\n    <tr>\n      <th></th>\n      <th>Fecha</th>\n      <th>Moment</th>\n    </tr>\n    <tr>\n      <td><b>Size (Min. and Gzipped)</b></td>\n      <td>2.1KBs</td>\n      <td>13.1KBs</td>\n    </tr>\n    <tr>\n      <td><b>Date Parsing</b></td>\n      <td>&#x2713;</td>\n      <td>&#x2713;</td>\n    </tr>\n    <tr>\n      <td><b>Date Formatting</b></td>\n      <td>&#x2713;</td>\n      <td>&#x2713;</td>\n    </tr>\n    <tr>\n      <td><b>Date Manipulation</b></td>\n      <td></td>\n      <td>&#x2713;</td>\n    </tr>\n    <tr>\n      <td><b>I18n Support</b></td>\n      <td>&#x2713;</td>\n      <td>&#x2713;</td>\n    </tr>\n  </tbody>\n</table>\n\n## Use it\n\n#### Formatting\n`fecha.format` accepts a Date object (or timestamp) and a string format and returns a formatted string. See below for\navailable format tokens.\n\nNote: `fecha.format` will throw an error when passed invalid parameters\n```js\nfecha.format(<Date Object>, <String Format>);\n\n// Custom formats\nfecha.format(new Date(2015, 10, 20), 'dddd MMMM Do, YYYY'); // 'Friday November 20th, 2015'\nfecha.format(new Date(1998, 5, 3, 15, 23, 10, 350), 'YYYY-MM-DD hh:mm:ss.SSS A'); // '1998-06-03 03:23:10.350 PM'\n\n// Named masks\nfecha.format(new Date(2015, 10, 20), 'mediumDate'); // 'Nov 20, 2015'\nfecha.format(new Date(2015, 2, 10, 5, 30, 20), 'shortTime'); // '05:30'\n\n// Literals\nfecha.format(new Date(2001, 2, 5, 6, 7, 2, 5), '[on] MM-DD-YYYY [at] HH:mm'); // 'on 03-05-2001 at 06:07'\n```\n\n#### Parsing\n`fecha.parse` accepts a Date string and a string format and returns a Date object. See below for available format tokens.\n\nNote: `fecha.parse` will throw an error when passed invalid parameters\n```js\n// Custom formats\nfecha.parse('February 3rd, 2014', 'MMMM Do, YYYY'); // new Date(2014, 1, 3)\nfecha.parse('10-12-10 14:11:12', 'YY-MM-DD HH:mm:ss'); // new Date(2010, 11, 10, 14, 11, 12)\n\n// Named masks\nfecha.parse('5/3/98', 'shortDate'); // new Date(1998, 4, 3)\nfecha.parse('November 4, 2005', 'longDate'); // new Date(2005, 10, 4)\n```\n\n#### i18n Support\n```js\n// Override fecha.i18n to support any language\nfecha.i18n = {\n\tdayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\n\tdayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n\tmonthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n\tmonthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n\tamPm: ['am', 'pm'],\n\t// D is the day of the month, function returns something like...  3rd or 11th\n\tDoFn: function (D) {\n\t\treturn D + [ 'th', 'st', 'nd', 'rd' ][ D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10 ];\n    }\n}\n```\n\n#### Custom Named Masks\n```js\nfecha.masks = {\n\tdefault: 'ddd MMM DD YYYY HH:mm:ss',\n\tshortDate: 'M/D/YY',\n\tmediumDate: 'MMM D, YYYY',\n\tlongDate: 'MMMM D, YYYY',\n\tfullDate: 'dddd, MMMM D, YYYY',\n\tshortTime: 'HH:mm',\n\tmediumTime: 'HH:mm:ss',\n\tlongTime: 'HH:mm:ss.SSS'\n};\n\n// Create a new mask\nfecha.masks.myMask = 'HH:mm:ss YY/MM/DD';\n\n// Use it\nfecha.format(new Date(2014, 5, 6, 14, 10, 45), 'myMask'); // '14:10:45 14/06/06'\n```\n\n### Formatting Tokens\n<table class=\"table table-striped table-bordered\">\n  <tbody>\n    <tr>\n      <th></th>\n      <th>Token</th>\n      <th>Output</th>\n    </tr>\n    <tr>\n      <td><b>Month</b></td>\n      <td>M</td>\n      <td>1 2 ... 11 12</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>MM</td>\n      <td>01 02 ... 11 12</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>MMM</td>\n      <td>Jan Feb ... Nov Dec</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>MMMM</td>\n      <td>January February ... November December</td>\n    </tr>\n    <tr>\n      <td><b>Day of Month</b></td>\n      <td>D</td>\n      <td>1 2 ... 30 31</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>Do</td>\n      <td>1st 2nd ... 30th 31st</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>DD</td>\n      <td>01 02 ... 30 31</td>\n    </tr>\n    <tr>\n      <td><b>Day of Week</b></td>\n      <td>d</td>\n      <td>0 1 ... 5 6</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>ddd</td>\n      <td>Sun Mon ... Fri Sat</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>dddd</td>\n      <td>Sunday Monday ... Friday Saturday</td>\n    </tr>\n    <tr>\n      <td><b>Year</b></td>\n      <td>YY</td>\n      <td>70 71 ... 29 30</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>YYYY</td>\n      <td>1970 1971 ... 2029 2030</td>\n    </tr>\n    <tr>\n      <td><b>AM/PM</b></td>\n      <td>A</td>\n      <td>AM PM</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>a</td>\n      <td>am pm</td>\n    </tr>\n    <tr>\n      <td><b>Hour</b></td>\n      <td>H</td>\n      <td>0 1 ... 22 23</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>HH</td>\n      <td>00 01 ... 22 23</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>h</td>\n      <td>1 2 ... 11 12</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>hh</td>\n      <td>01 02 ... 11 12</td>\n    </tr>\n    <tr>\n      <td><b>Minute</b></td>\n      <td>m</td>\n      <td>0 1 ... 58 59</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>mm</td>\n      <td>00 01 ... 58 59</td>\n    </tr>\n    <tr>\n      <td><b>Second</b></td>\n      <td>s</td>\n      <td>0 1 ... 58 59</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>ss</td>\n      <td>00 01 ... 58 59</td>\n    </tr>\n    <tr>\n      <td><b>Fractional Second</b></td>\n      <td>S</td>\n      <td>0 1 ... 8 9</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>SS</td>\n      <td>0 1 ... 98 99</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>SSS</td>\n      <td>0 1 ... 998 999</td>\n    </tr>\n    <tr>\n      <td><b>Timezone</b></td>\n      <td>ZZ</td>\n      <td>\n        -0700 -0600 ... +0600 +0700\n      </td>\n    </tr>\n  </tbody>\n</table>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://taylorhakes@github.com/taylorhakes/fecha.git"
  },
  "scripts": {
    "build": "uglifyjs fecha.js -m -o fecha.min.js && uglifyjs fecha.strict.js -m -o fecha.strict.min.js",
    "test": "eslint fecha.js fecha.strict.js && nyc --cache --reporter=text painless test.*"
  },
  "types": "./fecha.d.ts",
  "version": "2.3.3"
}
